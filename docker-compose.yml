version: '3.7'
services:
  zookeeper:
    container_name: zookeeper_local
    image: quay.io/strimzi/kafka:0.22.1-kafka-2.7.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    container_name: kafka_local
    image: quay.io/strimzi/kafka:0.22.1-kafka-2.7.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  schema-registry:
    container_name: schema_registry_local
    image: apicurio/apicurio-registry-mem:2.1.5.Final
    ports:
      - 8081:8080
    depends_on:
      - kafka
    environment:
      QUARKUS_PROFILE: prod

  dynamodb:
    container_name: localstack_local
    image: localstack/localstack:latest
    environment:
      - DEBUG=1
      - USE_SSL=0
      - AWS_CBOR_DISABLE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME=localstack
      - SERVICES=dynamodb
      - AWS_DEFAULT_REGION=sa-east-1
      - AWS_ACCESS_KEY_ID=test-key
      - AWS_SECRET_ACCESS_KEY=test-secret
    ports:
      - '4566-4583:4566-4583'
    volumes:
      - ${TEMPDIR:-/tmp/localstack}:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/init-dynamodb.sh:/docker-entrypoint-initaws.d/init-dynamodb.sh
